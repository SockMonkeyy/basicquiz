{
    "response_code": 0,
    "results": [
      
        {
            
            "_id": "5f385fd42b8c528127ee728b",
            "id": 154,
            "question": " What's the output?",
            "codeSnippet": "const createMember = ({ email, address = {}}) => {\n\tconst validEmail = /.+\\@.+\\..+/.test(email)\n\tif (!validEmail) throw new Error(\"Valid email pls\")\n\n\treturn {\n\t\temail,\n\t\taddress: address ? address : null\n\t}\n}\n\nconst member = createMember({ email: \"my@email.com\" })\nconsole.log(member)",
            "correct_answer": "C",
            "answerExplanation": "The default value of `address` is an empty object `{}`. When we set the variable `member` equal to the object returned by the `createMember` function, we didn't pass a value for address, which means that the value of address is the default empty object `{}`. An empty object is a truthy value, which means that the condition of the `address ? address : null` conditional returns `true`. The value of address is the empty object `{}`.",
            "answerOptions": [
                "`{ email: \"my@email.com\", address: undefined }`",
                "`{ email: \"my@email.com\", address: null }`",
                "`{ email: \"my@email.com\" }`",
                "`{ email: \"my@email.com\", address: {} }`"
            ]
        },
        {
           
            
            "question": " What's the output?",
            "codeSnippet": "let randomValue = { name: \"Lydia\" }\nrandomValue = 23\n\nif (!typeof randomValue === \"string\") {\n\tconsole.log(\"It's not a string!\")\n} else {\n\tconsole.log(\"Yay it's a string!\")\n}",
            "correct_answer": "B",
            "answerExplanation": "The condition within the `if` statement checks whether the value of `!typeof randomValue` is equal to `\"string\"`. The `!` operator converts the value to a boolean value. If the value is truthy, the returned value will be `false`, if the value is falsy, the returned value will be `true`. In this case, the returned value of `typeof randomValue` is the truthy value `\"string\"`, meaning that the value of `!typeof randomValue` is the boolean value `false`.\n\n`!typeof randomValue === \"string\"` always returns false, since we're actually checking `false === \"string\"`. Since the condition returned `false`, the code block of the `else` statement gets run, and `Yay it's a string!` gets logged.",
            "answerOptions": [
                "`undefined`",
                "`It's not a string!`",
                "`Yay it's a string!`",
                "`TypeError`"
            ]
        
        }
    ]
}